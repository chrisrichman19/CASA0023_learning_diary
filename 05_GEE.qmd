# Google Earth Engine

## Summary

This week's session introduced Google Earth Engine (GEE), a cloud-based geospatial data platform that aims to simplify the huge technical processes often involved with satellite data.

A key feature of GEE is its pre-built code libraries for common preprocessing tasks, such as those covered in week three, and a comprehensive data catalog providing direct access to datasets like Landsat and Sentinel, as well as climate, land cover, and building data. This simplifies the coding process and technical aspects, fortunately meaning that I did not have to learn a whole new language from scratch (JavaScript). Another significant advantage of Google Earth Engine is its cloud-based processing environment, which enables computationally intensive tasks to be performed more efficiently than on your own machine. There is also a thriving open-source community in Google Earth Engine so if you have an issue, it is likely that someone else has had it before and solved it:

<https://gee-community-catalog.org/> [@roy2025]

<https://github.com/gee-community>

Continuing on from last week, I wanted to use this week's practical to see how remote sensing could be used to guide policy. So in google earth engine I calculated and visualised NDVI for each borough. Could Google earth engine be used to guide where more urban greening needs to occur? I have included the code and a flowchart below:

```         
[Load Borough Boundaries] --> [Load Sentinel-2 Data] --> [Filter Data by Date & Bounds] --> [Calculate Mean Image] --> [Calculate NDVI] --> [Visualise NDVI] --> [Print Mean NDVI for Borough] 
```

<https://code.earthengine.google.com/f5cb5c8ca991caa1223ae325a4c66763>

![](images/clipboard-1888529418.png)

| Borough              | mean NDVI |
|----------------------|-----------|
| Bromley              | 0.540     |
| Croydon              | 0.510     |
| Richmond upon Thames | 0.504     |

: Most green boroughs by mean NDVI

| Borough        | mean NDVI |
|----------------|-----------|
| City of London | 0.127     |
| Tower Hamlets  | 0.274     |
| Westminster    | 0.302     |

: Least green boroughs by mean NDVI

This quick analysis provides a possible use case for monitoring urban greening as well as a justification for geographically aware policy. This could clearly be further refined, for example, to a finer scale to identify particular neighbourhoods that require more urban greening, but it demonstrates how GEE can be an effective platform for communicating results and reproducible research.

## Application

In a paper discussing the trajectory of GEE in research, Zhao et al., (2021) notes how since 2015, applications of GEE expanded, covering fields such as climate studies, agriculture, water resource management, land cover analysis, disaster response, and urban development [@zhao2021; @tamiminia2020]. And in 2020, almost 300 research papers utilised GEE, demonstrating its growing influence.

A key strength of GEE lies in its contributions to visualisation and reproducibility. The platform enables researchers to create apps to present datasets interactively, improving researchers ability to communicate their results and make them more accessible to both expert and non-expert audiences. Hansen's (2013) research paper on global forest change, was accompanied with an interactive GEE visualtion allowing users to explore deforestation patterns themselves [@hansen2013].

![](images/clipboard-2935809600.png)

<https://alexchunet.users.earthengine.app/view/forestchange2020>

Another example is LandTrendr; a Landsat-based detection algorithm for trends in disturbance and recovery, widely used for the analysis of change in Landsat spectral time series data \[@kennedy2018\].

It was initially implemented in a proprietary programming language (IDL) with high computational demands however it was transitioned to GEE removing accessibility barriers.

It has been used extensively in research, with the original paper "Detecting trends in forest disturbance and recovery using yearly Landsat time series" being cited 1887 times, perfectly demonstrating how GEE can allow advanced algorithms to become more accessible [@kennedy2010]. The free availability of LandTrendr enables researchers to apply it to study areas without needing extensive the computational infrastructure.

## Reflection

Of all the remote sensing tools I have used so far, I think Google Earth Engine finds the best balance between accessibility and powerful coding. The pre-written code that can be adapted to fit specific needs, making it an ideal tool for both beginners and experienced users.

The mini-project I completed on urban greening in London demonstrated just how efficient GEE can be. By adapting existing code from the practicals and utilising its built-in libraries, I was able to complete this analysis in a relatively short amount of time. This is reflected in GEE's recent explosion in research applications.

I also found it rewarding to apply these skills to a real-world topic that is both relevant and local to me. Seeing how remote sensing and GEE can be used in a policy setting reinforced its practical applications beyond just academic exercises. While there are limitations, such as data availability and the learning curve for more advanced scripting, the accessibility of GEE makes it a highly attractive tool for integrating Earth Observation data into policy and decision-making.
